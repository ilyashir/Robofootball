// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_messages_5frobocup_5fssl_5fwrapper_2eproto__INCLUDED
#define PROTOBUF_messages_5frobocup_5fssl_5fwrapper_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "messages_robocup_ssl_detection.pb.h"
#include "messages_robocup_ssl_geometry.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_messages_5frobocup_5fssl_5fwrapper_2eproto();
void protobuf_AssignDesc_messages_5frobocup_5fssl_5fwrapper_2eproto();
void protobuf_ShutdownFile_messages_5frobocup_5fssl_5fwrapper_2eproto();

class SSL_WrapperPacket;

// ===================================================================

class SSL_WrapperPacket : public ::google::protobuf::Message {
 public:
  SSL_WrapperPacket();
  virtual ~SSL_WrapperPacket();
  
  SSL_WrapperPacket(const SSL_WrapperPacket& from);
  
  inline SSL_WrapperPacket& operator=(const SSL_WrapperPacket& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SSL_WrapperPacket& default_instance();
  void Swap(SSL_WrapperPacket* other);
  
  // implements Message ----------------------------------------------
  
  SSL_WrapperPacket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SSL_WrapperPacket& from);
  void MergeFrom(const SSL_WrapperPacket& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .SSL_DetectionFrame detection = 1;
  inline bool has_detection() const;
  inline void clear_detection();
  static const int kDetectionFieldNumber = 1;
  inline const ::SSL_DetectionFrame& detection() const;
  inline ::SSL_DetectionFrame* mutable_detection();
  
  // optional .SSL_GeometryData geometry = 2;
  inline bool has_geometry() const;
  inline void clear_geometry();
  static const int kGeometryFieldNumber = 2;
  inline const ::SSL_GeometryData& geometry() const;
  inline ::SSL_GeometryData* mutable_geometry();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::SSL_DetectionFrame* detection_;
  ::SSL_GeometryData* geometry_;
  friend void  protobuf_AddDesc_messages_5frobocup_5fssl_5fwrapper_2eproto();
  friend void protobuf_AssignDesc_messages_5frobocup_5fssl_5fwrapper_2eproto();
  friend void protobuf_ShutdownFile_messages_5frobocup_5fssl_5fwrapper_2eproto();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SSL_WrapperPacket* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// SSL_WrapperPacket

// optional .SSL_DetectionFrame detection = 1;
inline bool SSL_WrapperPacket::has_detection() const {
  return _has_bit(0);
}
inline void SSL_WrapperPacket::clear_detection() {
  if (detection_ != NULL) detection_->::SSL_DetectionFrame::Clear();
  _clear_bit(0);
}
inline const ::SSL_DetectionFrame& SSL_WrapperPacket::detection() const {
  return detection_ != NULL ? *detection_ : *default_instance_->detection_;
}
inline ::SSL_DetectionFrame* SSL_WrapperPacket::mutable_detection() {
  _set_bit(0);
  if (detection_ == NULL) detection_ = new ::SSL_DetectionFrame;
  return detection_;
}

// optional .SSL_GeometryData geometry = 2;
inline bool SSL_WrapperPacket::has_geometry() const {
  return _has_bit(1);
}
inline void SSL_WrapperPacket::clear_geometry() {
  if (geometry_ != NULL) geometry_->::SSL_GeometryData::Clear();
  _clear_bit(1);
}
inline const ::SSL_GeometryData& SSL_WrapperPacket::geometry() const {
  return geometry_ != NULL ? *geometry_ : *default_instance_->geometry_;
}
inline ::SSL_GeometryData* SSL_WrapperPacket::mutable_geometry() {
  _set_bit(1);
  if (geometry_ == NULL) geometry_ = new ::SSL_GeometryData;
  return geometry_;
}

#endif  // PROTOBUF_messages_5frobocup_5fssl_5fwrapper_2eproto__INCLUDED
